plugins {
    id 'java-library'
    id 'jacoco'
    id 'signing'
    id 'maven-publish'
    id 'io.github.gradle-nexus.publish-plugin' version '2.0.0'
    id 'org.sonarqube' version '5.1.0.4882'
}

group 'com.apptasticsoftware'
version "${version}"

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.jsoup:jsoup:1.18.1'
    testImplementation("org.junit.jupiter:junit-jupiter:5.11.2")
    testRuntimeOnly("org.junit.platform:junit-platform-launcher")
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    withJavadocJar()
    withSourcesJar()
}

ext.moduleName = 'com.apptasticsoftware.mfsapdmr'

compileJava {
    options.encoding = "UTF-8"
    inputs.property('moduleName', moduleName)
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath
        ]
        classpath = files()
    }
}

jacoco {
    toolVersion = "0.8.9"
}

jacocoTestReport {
    reports {
        xml.required = true
        xml.outputLocation = file("${buildDir}/reports/jacoco/report.xml")
    }
}

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
        }
    }
    connectTimeout = Duration.ofMinutes(3)
    clientTimeout = Duration.ofMinutes(3)
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from(components.java)
            pom {
                name = 'mfsapdmr'
                description = 'Java library for extracting data from the Malta Financial Services Authority (MFSA) PDMR registry.'
                url = 'https://github.com/w3stling/mfsa-pdmr'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://raw.githubusercontent.com/w3stling/mfsa-pdmr/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'w3stling'
                        name = 'Apptastic Software'
                        email = 'apptastic.software@gmail.com'
                    }
                }
                scm {
                    url = 'https://github.com/w3stling/mfsa-pdmr'
                    connection = 'scm:git://github.com/w3stling/mfsa-pdmr.git'
                    developerConnection = 'scm:git:ssh://github.com/w3stling/mfsa-pdmr.git'
                }
            }
        }
    }
}

signing {
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.mavenJava
}

sonar {
    properties {
        property "sonar.projectKey", "w3stling_mfsa-pdmr"
        property "sonar.organization", "w3stling"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}